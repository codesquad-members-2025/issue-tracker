DROP TABLE IF EXISTS issue_label;
DROP TABLE IF EXISTS assignee;
DROP TABLE IF EXISTS comment;
DROP TABLE IF EXISTS issue;
DROP TABLE IF EXISTS label;
DROP TABLE IF EXISTS milestone;
DROP TABLE IF EXISTS "user";

CREATE TABLE "user"
(
    id                BIGINT       NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    github_id         BIGINT,
    login             VARCHAR(255),
    password          VARCHAR(255),
    nickname          VARCHAR(255) NOT NULL,
    profile_image_url VARCHAR(255),
    uuid              VARCHAR(255) NOT NULL,
    created_at        TIMESTAMP    NOT NULL,
    updated_at        TIMESTAMP,
    deleted_at        TIMESTAMP,
    UNIQUE KEY user_uuid_unique (uuid)
);

CREATE TABLE milestone
(
    id          BIGINT       NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    is_closed   BOOLEAN      NOT NULL,
    title       VARCHAR(255) NOT NULL,
    description TEXT,
    expired_at  DATE,
    created_at  TIMESTAMP    NOT NULL,
    updated_at  TIMESTAMP,
    deleted_at  TIMESTAMP
);

CREATE TABLE issue
(
    id           BIGINT       NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    author_id    BIGINT       NOT NULL,
    milestone_id BIGINT,
    title        VARCHAR(255) NOT NULL,
    contents     TEXT         NOT NULL,
    is_closed    BOOLEAN      NOT NULL,
    file_path    VARCHAR(255),
    created_at   TIMESTAMP    NOT NULL,
    updated_at   TIMESTAMP,
    deleted_at   TIMESTAMP,
    FOREIGN KEY (author_id) REFERENCES "user"(id),
    FOREIGN KEY (milestone_id) REFERENCES milestone (id)
);

CREATE TABLE label
(
    id          BIGINT       NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        VARCHAR(255) NOT NULL,
    description VARCHAR(255),
    color       VARCHAR(255) NOT NULL,
    created_at  TIMESTAMP    NOT NULL,
    updated_at  TIMESTAMP,
    deleted_at  TIMESTAMP
);

CREATE TABLE comment
(
    id         BIGINT    NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    issue_id   BIGINT,
    user_id    BIGINT    NOT NULL,
    contents   TEXT      NOT NULL,
    file_path  VARCHAR(255),
    created_at TIMESTAMP NOT NULL,
    updated_at TIMESTAMP,
    deleted_at TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES "user"(id),
    FOREIGN KEY (issue_id) REFERENCES issue (id)
);

CREATE TABLE assignee
(
    id       BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id  BIGINT NOT NULL,
    issue_id BIGINT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES "user"(id),
    FOREIGN KEY (issue_id) REFERENCES issue (id)
);

CREATE TABLE issue_label
(
    id       BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    issue_id BIGINT NOT NULL,
    label_id BIGINT NOT NULL,
    FOREIGN KEY (issue_id) REFERENCES issue (id),
    FOREIGN KEY (label_id) REFERENCES label (id)
);
