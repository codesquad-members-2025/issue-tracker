name: Build and Deploy Backend

on:
  push:
    branches:
      - main
  workflow_dispatch:
   
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Build backend with Gradle
        working-directory: ./backend
        run: ./gradlew clean build

      - name: List build/libs to check JAR
        run: ls -l backend/build/libs

      - name: Upload JAR artifact (optional)
        uses: actions/upload-artifact@v2
        with:
          name: backend-jar
          path: backend/build/libs/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download backend JAR artifact
        uses: actions/download-artifact@v3
        with:
          name: backend-jar
          path: ./deploy-artifacts

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            PROJECT_NAME="issue-tracker"
            DEPLOY_DIR="/home/ubuntu/$PROJECT_NAME"
            LOG_DIR="$DEPLOY_DIR/logs"
            LOG_FILE="$LOG_DIR/app.log"
            JAR_NAME=$(ls ./deploy-artifacts/*.jar | xargs -n1 basename)

            mkdir -p "$DEPLOY_DIR"
            mkdir -p "$LOG_DIR"

            echo "🛑 기존 프로세스 종료 중..."
            PID=$(pgrep -f "$JAR_NAME" || true)
            if [ -n "$PID" ]; then
              kill -9 $PID
              echo "✅ 종료 완료 (PID=$PID)"
            else
              echo "⚠️ 실행 중인 프로세스 없음"
            fi

            echo "🚀 새 백엔드 실행..."
            nohup java -jar "$DEPLOY_DIR/$JAR_NAME" > "$LOG_FILE" 2>&1 &

            echo "✅ 배포 완료 (PID=$!)"

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: ./deploy-artifacts/*.jar
          target: /home/ubuntu/issue-tracker/
